; This context will override dialout in FreePBX and will track in Asternic outbound
; calls only if the accountcode is set for the Agent device. The Accountcode will
; be the queue name for the outbound call.

[macro-dialout-trunk-predial-hook]
exten => s,1,Noop(Test Track Outbound)
exten => s,n,Noop(Trunk is ${OUT_${DIAL_TRUNK}})
exten => s,n,Noop(Dialout number is ${OUTNUM})
exten => s,n,Noop(Dial options are ${DIAL_TRUNK_OPTIONS})
exten => s,n,Set(QDIALER_AGENT=${DB(AMPUSER/${AMPUSER}/cidname)})
exten => s,n,GotoIf($["${QDIALER_AGENT}" != ""]?nextcheck)
exten => s,n,Noop(NO AMPUSER, exit normally with no tracking outbound)
exten => s,n,Return()
exten => s,n(nextcheck),GotoIf($["${CDR(accountcode)}" != ""]?bypass)
exten => s,n,Noop(NO ACCOUNTCODE, exit normally with no tracking outbound)
exten => s,n,Return()
exten => s,n(bypass),Set(PREDIAL_HOOK_RET=BYPASS)
exten => s,n,Goto(queuedial,${OUTNUM},1)
exten => s,n,Return()
; The queuedial context has the outbound trunk hardcoded

[queuedial]
exten => _.,1,Set(QDIALER_QUEUE=${CDR(accountcode)})
exten => _.,n,Set(QDIALER_AGENT=${DB(AMPUSER/${AMPUSER}/cidname)})
exten => _.,n,Set(custom=${CUT(OUT_${DIAL_TRUNK},:,1)})
exten => _.,n,GotoIf($["${custom}" = "AMP"]?customtrunk)
exten => _.,n,Set(QDIALER_CHANNEL=${OUT_${DIAL_TRUNK}}/${EXTEN})
exten => _.,n,GosubIf($["${DIALSTR:0:5}" = "PJSIP"]?pjsipdial,1(${EXTEN}))
exten => _.,n,GotoIf($["${OUT_${DIAL_TRUNK}_SUFFIX}" == ""]?continuequeuedial)
exten => _.,n,Set(QDIALER_CHANNEL=${OUT_${DIAL_TRUNK}}/${EXTEN}${OUT_${DIAL_TRUNK}_SUFFIX})
exten => _.,n,Goto(continuequeuedial)

; it is a custom trunk
exten => _.,n(customtrunk),Set(pre_num=${CUT(OUT_${DIAL_TRUNK},$,1)})
exten => _.,n,Set(the_num=${CUT(OUT_${DIAL_TRUNK},$,2)})
exten => _.,n,Set(post_num=${CUT(OUT_${DIAL_TRUNK},$,3)})
exten => _.,n,GotoIf($["${the_num}" = "OUTNUM"]?outnum:skipoutnum)
exten => _.,n(outnum),Set(the_num=${OUTNUM})
exten => _.,n(skipoutnum),Set(QDIALER_CHANNEL=${pre_num:4}${the_num}${post_num})
exten => _.,n(continuequeuedial),Noop(Qdialer channel = ${QDIALER_CHANNEL})
exten => _.,n,Set(QueueName=${QDIALER_QUEUE})
exten => _.,n,Goto(qlog-queuedial,${EXTEN},1)

exten => pjsipdial,1,Set(PJ=${CUT(QDIALER_CHANNEL,/,2)})
exten => pjsipdial,n,Set(QDIALER_CHANNEL=PJSIP/${ARG1}@${PJ})
exten => pjsipdial,n,Return()

[qlog-queuedial]
exten => _.,1,NoOp(Outbound call -> A:${QDIALER_AGENT} N:${EXTEN} Q:${QDIALER_QUEUE} Ch:${QDIALER_CHANNEL})
exten => _.,n,Set(ST=${EPOCH})
exten => _.,n,Set(GM=${REPLACE(QDIALER_AGENT, ,_)})
exten => _.,n,Set(GLOBAL(${GM})=U)
exten => _.,n,Set(GLOBAL(${GM}ans)=0)
exten => _.,n,QueueLog(${QDIALER_QUEUE},${UNIQUEID},${QDIALER_AGENT},ENTERQUEUE|-|${EXTEN})

exten => _.,n,Set(UNO=${CUT(DIAL_TRUNK_OPTIONS,M,1)})
exten => _.,n,Set(DOS=${CUT(DIAL_TRUNK_OPTIONS,),2)})
exten => _.,n,Set(DIAL_TRUNK_OPTIONS=${UNO}${DOS})
exten => _.,n,Dial(${QDIALER_CHANNEL},300,gU(queuedial-answer^${UNIQUEID}^${GM}^${QDIALER_QUEUE}^${QDIALER_AGENT}^${ST}^${AMPUSER})${DIAL_TRUNK_OPTIONS})
exten => _.,n,Set(CAUSECOMPLETE=${IF($["${DIALSTATUS}" = "ANSWER"]?C)})

; Trapping call termination here
exten => h,1,NoOp( "Call exiting: status ${GLOBAL(${GM})} answered at: ${GLOBAL(${GM}ans)} DS: ${DIALSTATUS}"  )
exten => h,n,NoOp("Call Termination Step?)
exten => h,n,Set(DB(LASTDIAL/${QDIALER_AGENT})=${EPOCH})
exten => h,n,Goto(case-${GLOBAL(${GM})})
exten => h,n,Hangup()

; Call unanswered
exten => h,n(case-U),Set(WT=$[${EPOCH} - ${ST}])
exten => h,n,NoOp("Call Unanswered")
exten => h,n,QueueLog(${QDIALER_QUEUE},${UNIQUEID},${QDIALER_AGENT},${DIALSTATUS},1,1,${WT})
exten => h,n,UserEvent(AgentComplete,Queue: ${QDIALER_QUEUE},TalkTime: 0,Channel: ${CHANNEL})
exten => h,n,Hangup()

; Call answered: agent/callee hung
exten => h,n,NoOp("Call Answered")
exten => h,n(case-A),Set(COMPLETE=${IF($["${CAUSECOMPLETE}" = "C"]?COMPLETECALLER:COMPLETEAGENT)})
exten => h,n,Set(WT=$[${GLOBAL(${GM}ans)} - ${ST}])
exten => h,n,Set(CT=$[${EPOCH} - ${GLOBAL(${GM}ans)}])
exten => h,n,NoOp("Sending to queue log")
exten => h,n,QueueLog(${QDIALER_QUEUE},${UNIQUEID},${QDIALER_AGENT},${COMPLETE},${WT},${CT}|)
exten => h,n,UserEvent(AgentComplete,Queue: ${QDIALER_QUEUE},TalkTime: ${CT},Channel: ${CHANNEL})
exten => h,n,Hangup()


[queuedial-answer]
exten => s,1,NoOp("Queuedial-answer UID:${ARG1} GR:${ARG2} Q:${ARG3} A:${ARG4} E:${ARG5}")
exten => s,n,Set(QDIALER_QUEUE=${ARG3})
exten => s,n,Set(QDIALER_QUEUE=${REPLACE(QDIALER_QUEUE, ,_)})
exten => s,n,GotoIf($["${CUT(DB(AMPUSER/${ARG6}/recording),=,3)}" = "Always"]?mixmonitor)
exten => s,n,GotoIf($["${DB(AMPUSER/${ARG6}/recording/out/external)}" = "always"]?mixmonitor)
exten => s,n,Goto(continue)
exten => s,n(mixmonitor),MixMonitor(${MIXMON_DIR}${YEAR}/${MONTH}/${DAY}/out-${QDIALER_QUEUE}-${ARG1}.wav,b,/usr/local/parselog/update_mix_mixmonitor.pl ${ARG1} ${MIXMON_DIR}${YEAR}/${MONTH}/${DAY}/out-${QDIALER_QUEUE}-${ARG1}.wav)
exten => s,n,Set(AUDIOHOOK_INHERIT(MixMonitor)=yes)
exten => s,n(continue),Set(NOW=${EPOCH})
exten => s,n,Set(WD=$[${NOW} - ${ARG5}])
exten => s,n,QueueLog(${ARG3},${ARG1},${ARG4},CONNECT,${WD}|)
exten => s,n,Set(GLOBAL(${ARG2})=A)
exten => s,n,Set(GLOBAL(${ARG2}ans)=${NOW})
exten => s,n,NoOp("Queuedial-answer terminating")
exten => s,n,Return()

[queuelog]
exten => s,1,QueueLog(${ARG3},${ARG2},${ARG4},${ARG5},${ARG6}|${ARG7}|${ARG8})
exten => s,n,Return()
